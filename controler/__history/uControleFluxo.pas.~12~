unit uControleFluxo;

interface

uses
   Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
    Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uCadPadrao, Vcl.Buttons,Vcl.Menus, Vcl.ExtDlgs, Vcl.StdCtrls,uControleSQL;

  type
    TCondominioControler = class


    private
    FedCodigo: Tedit;
    FedBairro: Tedit;
    FedEmail: Tedit;
    FedDiaVencimento: Tedit;
    FcbTipolocal: TComboBox;
    FedComplemento: Tedit;
    FedNomeLocal: Tedit;
    FedNome: Tedit;
    FedCidade: Tedit;
    FcbUF: TcomboBox;
    FedTotalCondonimio: Tedit;
    FedCNPJ: Tedit;
    FedNumero: TEdit;
    FedDiaVenc: TEdit;
    FSQLControl : TExecSQL;

    procedure SetedCodigo(const Value: Tedit);
    procedure SetcbTipolocal(const Value: TComboBox);
    procedure SetcbUF(const Value: TCombobox);
    procedure SetedBairro(const Value: Tedit);
    procedure SetedCidade(const Value: Tedit);
    procedure SetedCNPJ(const Value: Tedit);
    procedure SetedComplemento(const Value: Tedit);
    procedure SetedDiaVencimento(const Value: Tedit);
    procedure SetedEmail(const Value: Tedit);
    procedure SetedNome(const Value: Tedit);
    procedure SetedNomeLocal(const Value: Tedit);
    procedure SetedTotalCondonimio(const Value: Tedit);
    procedure SetedNumero(const Value: TEdit);
    procedure SetedDiaVenc(const Value: TEdit);




    public

      property edCodigo               :Tedit read FedCodigo write SetedCodigo;
      property edNome                 :Tedit read FedNome write SetedNome;
      property edEmail                :Tedit read FedEmail write SetedEmail;
      property edCNPJ                 :Tedit read FedCNPJ write SetedCNPJ;
      property edComplemento          :Tedit read FedComplemento write SetedComplemento;
      property cbTipolocal            :TComboBox read FcbTipolocal write SetcbTipolocal;
      property edNomeLocal            :Tedit read FedNomeLocal write SetedNomeLocal;
      property cbUF                   :TComboBox read FcbUF write SetcbUF;
      property edCidade               :Tedit read FedCidade write SetedCidade;
      property edBairro               :Tedit read FedBairro write SetedBairro;
      property edTotalCondonimio      :Tedit read FedTotalCondonimio write SetedTotalCondonimio;
      property edDiaVencimento        :Tedit  read FedDiaVencimento write SetedDiaVencimento;
      property edNumero               :TEdit read FedNumero write SetedNumero;
      property edDiaVenc              :TEdit read FedDiaVenc write SetedDiaVenc;
      procedure pInsereRegistro;



    end;
type
      TBlocoControler = class
              FSQLControl:TExecSQL ;
          private
              FedCodigoCondomínio: Tedit;
              Fcbtipo: TComboBox;
              FedCodigo: TEdit;
              FedNomeBloco: Tedit;
              procedure SetedCodigoCondominio(const Value: Tedit);
              procedure Setcbtipo(const Value: TComboBox);
              procedure SetedCodigo(const Value: TEdit);
              procedure SetedNomeBloco(const Value: Tedit);

          public
              property edCodigoCondominio         :Tedit read FedCodigoCondomínio write SetedCodigoCondominio;
              property cbtipo                     :TComboBox read Fcbtipo write Setcbtipo;
              property edCodigo                   :TEdit read FedCodigo write SetedCodigo;
              property edNomeBloco                :Tedit read FedNomeBloco write SetedNomeBloco;
              procedure pInsereRegistro;

      end;
type
      TMoradorControler = class
        private
          FedCodigo: tedit;
          Fedcodunidade: tedit;
          Fcheckpropietario: TCheckBox;
          Fedemail: tedit;
          Fednascimento: tedit;
          Fednome: tedit;
          Fedtelefone: tedit;
          FSQLCONTROL : TExecSQL;
          procedure SetedCodigo(const Value: tedit);
          procedure Setedcodunidade(const Value: tedit);
          procedure Setcheckpropietario(const Value: TCheckBox);
          procedure Setedemail(const Value: tedit);
          procedure Setednascimento(const Value: tedit);
          procedure Setednome(const Value: tedit);
          procedure Setedtelefone(const Value: tedit);

        public
          property  edCodigo:tedit read FedCodigo write SetedCodigo;
          property  edcodunidade : tedit read Fedcodunidade write Setedcodunidade;
          property  ednome:tedit read Fednome write Setednome;
          property  ednascimento:tedit read Fednascimento write Setednascimento;
          property  edtelefone:tedit read Fedtelefone write Setedtelefone;
          property  edemail:tedit read Fedemail write Setedemail;
          property  checkpropietario:TCheckBox read Fcheckpropietario write Setcheckpropietario;
          procedure pInsereRegistro;
      end;
type
    TUnidadeControler = class
       private
        FedEmail: TEdit;
        FedCodigo: TEdit;
        FedCPF: Tedit;
        FedBairo: Tedit;
        FedNumero: TEdit;
        FedCodBloco: TEdit;
        FedCodCond: TEdit;
        FedNome: Tedit;
        Fedcidade: TEdit;
        FcbUF: TComboBox;
        FedCOmplemente: TEdit;
        Fmemobs: TMemo;
        FedCNPJ: Tedit;
        FSQLCONTROL : TExecSQL;
        procedure SetcbUF(const Value: TComboBox);
        procedure SetedBairo(const Value: Tedit);
        procedure Setedcidade(const Value: TEdit);
        procedure SetedCNPJ(const Value: Tedit);
        procedure SetedCodBloco(const Value: TEdit);
        procedure SetedCodCond(const Value: TEdit);
        procedure SetedCodigo(const Value: TEdit);
        procedure SetedCOmplemente(const Value: TEdit);
        procedure SetedCPF(const Value: Tedit);
        procedure SetedEmail(const Value: TEdit);
        procedure SetedNome(const Value: Tedit);
        procedure SetedNumero(const Value: TEdit);
        procedure Setmemobs(const Value: TMemo);
       public
        property edCodigo           :TEdit read FedCodigo write SetedCodigo;
        property edCodCond          :TEdit read FedCodCond write SetedCodCond;
        property edCodBloco         :TEdit read FedCodBloco write SetedCodBloco;
        property edNumero           :TEdit read FedNumero write SetedNumero;
        property edCNPJ             :Tedit read FedCNPJ write SetedCNPJ;
        property memobs             :TMemo read Fmemobs write Setmemobs;
        property edNome             :Tedit read FedNome write SetedNome;
        property edCPF              :Tedit read FedCPF write SetedCPF;
        property edEmail            :TEdit read FedEmail write SetedEmail;
        property cbUF               :TComboBox read FcbUF write SetcbUF;
        property edcidade           :TEdit read Fedcidade write Setedcidade;
        property edCOmplemente      :TEdit read FedCOmplemente write SetedCOmplemente;
        property edBairo            :Tedit read FedBairo write SetedBairo;
        procedure pInsereBanco;


    end;

implementation

{ TCondominioControler }

procedure TCondominioControler.pInsereRegistro;
var
wSQL:String;
begin
 FSQLControl:= TExecSQL.Create;
 wSQL:=EmptyStr;

 wSQL := ' update or insert into TB_SYN_CONDOMINIO(';
 wSQL := wSQL + ' BDCODIGO,  BDNOME,  BDEMAIL,  BDTIPOLOCAL,  BDNUMERO,  BDCOMPLEMENTO, ' ;
 wSQL := wSQL + ' BDUF,  BDCIDADE,  BDBAIRRO,  BDTOTALCOND,  BDDIASUTEIS,  BDANTECIPAR, ' ;
 wSQL := wSQL + ' BDIMAGEM,  BDDIAVENC,  BDCNPJ)' ;
 wSQL := wSQL + ' values ('+trim(edCodigo.Text)+','''+trim(edNome.Text)+''','''+trim(edEmail.Text)+''','''+trim(cbTipolocal.Text)+''','+trim(edNumero.Text);
 wSQL := wSQL + ','''+trim(edComplemento.Text)+''','''+trim(cbUF.Text)+''','''+trim(edCidade.Text)+''','''+trim(edBairro.text)+''','''+trim(edTotalCondonimio.Text);
 wSQL := wSQL + ''',1,1,NULL,'+trim(edDiaVencimento.Text)+','''+trim(edCNPJ.Text)+''')';
 wSQL := wSQL + ' matching (bdcodigo);  ';

 FSQLControl.SQL(wSQL);


end;

procedure TCondominioControler.SetcbTipolocal(const Value: TComboBox);
begin
  FcbTipolocal := Value;
end;

procedure TCondominioControler.SetcbUF(const Value: TCombobox);
begin
  FcbUF := Value;
end;

procedure TCondominioControler.SetedBairro(const Value: Tedit);
begin
  FedBairro := Value;
end;

procedure TCondominioControler.SetedCidade(const Value: Tedit);
begin
  FedCidade := Value;
end;

procedure TCondominioControler.SetedCNPJ(const Value: Tedit);
begin
  FedCNPJ := Value;
end;

procedure TCondominioControler.SetedCodigo(const Value: Tedit);
begin
  FedCodigo := Value;
end;

procedure TCondominioControler.SetedComplemento(const Value: Tedit);
begin
  FedComplemento := Value;
end;

procedure TCondominioControler.SetedDiaVenc(const Value: TEdit);
begin
  FedDiaVenc := Value;
end;

procedure TCondominioControler.SetedDiaVencimento(const Value: Tedit);
begin
  FedDiaVencimento := Value;
end;

procedure TCondominioControler.SetedEmail(const Value: Tedit);
begin
  FedEmail := Value;
end;

procedure TCondominioControler.SetedNome(const Value: Tedit);
begin
  FedNome := Value;
end;

procedure TCondominioControler.SetedNomeLocal(const Value: Tedit);
begin
  FedNomeLocal := Value;
end;

procedure TCondominioControler.SetedNumero(const Value: TEdit);
begin
  FedNumero := Value;
end;

procedure TCondominioControler.SetedTotalCondonimio(const Value: Tedit);
begin
  FedTotalCondonimio := Value;
end;

{



 TBlocoControler




  }

procedure TBlocoControler.pInsereRegistro;
var
wSQL:String;
begin
 FSQLControl:= TExecSQL.Create;
 wSQL:=EmptyStr;
  wSQL := ' update or insert into TB_SYN_BLOCO(';
 wSQL := wSQL + ' BDCODIGO,  BDCODCOND,  BDTIPO,  BDNOMEBLOCO) ' ;
 wSQL := wSQL + ' values ('+Trim(edCodigo.Text)+','+trim(edCodigoCondominio.Text) ;
 wSQL := wSQL + ' ,'''+trim(cbtipo.Text)+''','''+trim(edNomeBloco.Text)+''')';
 wSQL := wSQL + ' matching (bdcodigo);  ';

 FSQLControl.SQL(wSQL);

end;

procedure TBlocoControler.Setcbtipo(const Value: TComboBox);
begin
  Fcbtipo := Value;
end;

procedure TBlocoControler.SetedCodigo(const Value: TEdit);
begin
  FedCodigo := Value;
end;

procedure TBlocoControler.SetedCodigoCondominio(const Value: Tedit);
begin
  FedCodigoCondomínio := Value;
end;

procedure TBlocoControler.SetedNomeBloco(const Value: Tedit);
begin
  FedNomeBloco := Value;
end;

{






TMoradorControler







}

procedure TMoradorControler.pInsereRegistro;
var
wSQL:String;
begin
 FSQLControl:= TExecSQL.Create;
 showmessage(edCodigo.Text);
 wSQL:=EmptyStr;
 wSQL := ' update or insert into TB_SYN_MORADORES(';
 wSQL := wSQL + ' BDCODIGO,BDCODIGOUNID,BDNOME,BDNASCIMENTO,BDTELEFONE,' ;
 wSQL := wSQL + 'BDEMAIL,BDRESPONSAVELFIN )' ;
 wSQL := wSQL + ' values ('+trim(edCodigo.Text)+','+trim(edcodunidade.Text) ;
 wSQL := wSQL + ' ,'''+trim(ednome.Text)+''','''+trim(ednascimento.Text)+'''';
 wSQL := wSQL + ' ,'+trim(edtelefone.Text)+','+trim(edemail.Text)+',1)';
 wSQL := wSQL + ' matching (bdcodigo);  ';

 FSQLControl.SQL(wSQL);

end;

procedure TMoradorControler.Setcheckpropietario(const Value: TCheckBox);
begin
  Fcheckpropietario := Value;
end;

procedure TMoradorControler.SetedCodigo(const Value: tedit);
begin
  FedCodigo := Value;
end;

procedure TMoradorControler.Setedcodunidade(const Value: tedit);
begin
  Fedcodunidade := Value;
end;

procedure TMoradorControler.Setedemail(const Value: tedit);
begin
  Fedemail := Value;
end;

procedure TMoradorControler.Setednascimento(const Value: tedit);
begin
  Fednascimento := Value;
end;

procedure TMoradorControler.Setednome(const Value: tedit);
begin
  Fednome := Value;
end;

procedure TMoradorControler.Setedtelefone(const Value: tedit);
begin
  Fedtelefone := Value;
end;

{







TUnidadeControler






}


procedure TUnidadeControler.pInsereBanco;
var
  wSQL:String;
begin
 FSQLControl:= TExecSQL.Create;
 showmessage(edCodigo.Text);
 wSQL:=EmptyStr;
 wSQL := ' update or insert into TB_SYN_UNIDADES(';
 wSQL := wSQL + 'BDCODIGO,BDCODBLOCO,BDNUMERO,BDCNPJ,BDOBS,';
 wSQL := wSQL + 'BDNOMEPROPRIETARIO,BDCPFPROPRIETARIO,BDEMAIL,BDUF';
 wSQL := wSQL + 'BDCIDADE,BDCOMPLEMENTO,BDBAIRRO)';
 wSQL := wSQL + ' values ('+Trim(edCodigo.Text)+','+Trim(edCodBloco.Text)+','+Trim(edNumero.Text);
 wSQL := wSQL + ', '''+Trim(edCNPJ.Text)+''','''+trim(memobs.Text)+''','''+Trim(edNome.Text) ;
 wSQL := wSQL + ', '''+Trim(edEmail.Text)+''','''+Trim(cbUF.Text)+''','''+Trim(edcidade.Text);
 wSQL := wSQL + ', '''+Trim(edCOmplemente.Text)+''','''+Trim(edBairo.Text)+''')';
 wSQL := wSQL + ' matching (bdcodigo);  ';

 FSQLControl.SQL(wSQL);

end;

procedure TUnidadeControler.SetcbUF(const Value: TComboBox);
begin
  FcbUF := Value;
end;

procedure TUnidadeControler.SetedBairo(const Value: Tedit);
begin
  FedBairo := Value;
end;

procedure TUnidadeControler.Setedcidade(const Value: TEdit);
begin
  Fedcidade := Value;
end;

procedure TUnidadeControler.SetedCNPJ(const Value: Tedit);
begin
  FedCNPJ := Value;
end;

procedure TUnidadeControler.SetedCodBloco(const Value: TEdit);
begin
  FedCodBloco := Value;
end;

procedure TUnidadeControler.SetedCodCond(const Value: TEdit);
begin
  FedCodCond := Value;
end;

procedure TUnidadeControler.SetedCodigo(const Value: TEdit);
begin
  FedCodigo := Value;
end;

procedure TUnidadeControler.SetedCOmplemente(const Value: TEdit);
begin
  FedCOmplemente := Value;
end;

procedure TUnidadeControler.SetedCPF(const Value: Tedit);
begin
  FedCPF := Value;
end;

procedure TUnidadeControler.SetedEmail(const Value: TEdit);
begin
  FedEmail := Value;
end;

procedure TUnidadeControler.SetedNome(const Value: Tedit);
begin
  FedNome := Value;
end;

procedure TUnidadeControler.SetedNumero(const Value: TEdit);
begin
  FedNumero := Value;
end;

procedure TUnidadeControler.Setmemobs(const Value: TMemo);
begin
  Fmemobs := Value;
end;

end.
